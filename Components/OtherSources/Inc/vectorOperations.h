/* #######################################################################################################
 *											INTRODUCTION
 * ####################################################################################################### */
/* *********************************************************************************************************
 *
 * =======================================================================================================
 * COMMENTS:
 *
 * =======================================================================================================
 * EXAMPLE:
 *
 ********************************************************************************************************** */

#ifndef VECTOR_OPERATIONS_
#define VECTOR_OPERATIONS_



/* #######################################################################################################
 *											INCLUDES
 * ####################################################################################################### */



/* #######################################################################################################
 *											DEFINES
 * ####################################################################################################### */



/* #######################################################################################################
 *											DATA TYPES
 * ####################################################################################################### */

typedef struct vect3D_d{
	double x;
	double y;
	double z;
}vect3D_d;

typedef struct vect2D_d{
	double x;
	double y;
}vect2D_d;



/* #######################################################################################################
 *											EXTERNS
 * ####################################################################################################### */



/* #######################################################################################################
 *										PUBLIC DECLARATIONS
 * ####################################################################################################### */

vect2D_d getVelocity2D(vect2D_d move, double v);

vect3D_d getVelocity3D(vect3D_d move, double v);



#endif /*VECTOR_OPERATIONS_*/
